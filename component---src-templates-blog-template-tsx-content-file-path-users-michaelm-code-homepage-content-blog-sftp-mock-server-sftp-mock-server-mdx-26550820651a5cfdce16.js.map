{"version":3,"file":"component---src-templates-blog-template-tsx-content-file-path-users-michaelm-code-homepage-content-blog-sftp-mock-server-sftp-mock-server-mdx-26550820651a5cfdce16.js","mappings":"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","sources":["webpack://homepage/./content/blog/sftp-mock-server/sftp-mock-server.mdx","webpack://homepage/./src/templates/BlogTemplate.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Nowadays, it's way more likely that you'll need to connect to Buckets on some cloud provider but sometimes (and it happened to me),\\nyou might find yourself with the need to connect to a sftp server directly. If this is your case too, I hope this article will be able to help you set that up with an awesome test coverage.\"), \"\\n\", React.createElement(_components.h2, null, \"What should I do when I try to connect to a SFTP.\"), \"\\n\", React.createElement(_components.p, null, \"First thing first, you should try to avoid doing that. If possible, you can look into how to synchronize the SFTP to a Cloud Bucket. (For example, you can look into \", React.createElement(_components.a, {\n    href: \"https://aws.amazon.com/fr/aws-transfer-family/\"\n  }, \"AWS\"), \")\"), \"\\n\", React.createElement(_components.p, null, \"Now If you're still here, it might mean that this is not a choice for you. Or you're just that curious to know how that would be done directly from your application. If so you're in luck so buckle up!\"), \"\\n\", React.createElement(_components.h3, null, \"Chose a client library.\"), \"\\n\", React.createElement(_components.p, null, \"When trying to connect to a new protocol, picking up a good library is always a must.\\n\", React.createElement(_components.a, {\n    href: \"https://github.com/mscdex/ssh2\"\n  }, \"SSH2\"), \" seems like the best solution out there to handle ssh (and thus sftp) workflows.\\nUnfortunately, it's a bit too low level for a casual use of a sftp server (you will need to look into if if you're looking to get crafty with your sftp server but then this article won't help you anymore :D)\"), \"\\n\", React.createElement(_components.p, null, \"That is why, I would direct you to \", React.createElement(_components.a, {\n    href: \"https://github.com/theophilusx/ssh2-sftp-client\"\n  }, \"ssh2-sftp-client\"), \". A simple wrapper that provide a usable promise API over ssh2.\"), \"\\n\", React.createElement(_components.h3, null, \"Connect to your SFTP server\"), \"\\n\", React.createElement(_components.p, null, \"This is the easy part of all of this.\"), \"\\n\", React.createElement(_components.p, null, \"Let's start by getting our package.json in order\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"npm install ssh2-sftp-client\\n\\nyarn add ssh2-sftp-client\\n\")), \"\\n\", React.createElement(_components.p, null, \"And then in the place you need to connect to the sftp server just go with something along the line of\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-typescript\"\n  }, \"import Client from \\\"ssh2-sftp-client\\\";\\n\\nconst client = new Client();\\nawait client.connect({\\n  host: \\\"127.0.0.1\\\", // You sftp server IP address\\n  port: 9999, // You sftp server port\\n  username: \\\"test\\\", // Your username\\n  password: \\\"test\\\", // You can also opt in for private key authentication\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"Once connected, you can do most operation that you'd like to using the client\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-typescript\"\n  }, \"await client.put(Buffer.from(\\\"Content\\\"), \\\"/directory/filename.extension\\\");\\nawait client.get(\\\"/directory/filename.extension\\\");\\nconst files = await client.list(\\\"/directory\\\");\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Thanks so what's left?\"), \"\\n\", React.createElement(_components.p, null, \"If you're building a quick poc then you're all set but if you're trying to add this to an application, you're probably wondering how you're going to make your test suite pass.\\nIf you're only doing unit tests, you can probably get away by mocking the client library but if you also want some integration/e2e tests, you might want to setup a sftp server to respond to your client calls.\"), \"\\n\", React.createElement(_components.p, null, \"I would argue that you have two main choice to do this\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Look for a docker image of a sftp server, understand it's configuration and add it to both your local env and the CI setup.\"), \"\\n\", React.createElement(_components.li, null, \"Install and a library that I built specially for this -> \", React.createElement(_components.a, {\n    href: \"https://github.com/MollardMichael/sftp-mock-server\"\n  }, \"sftp-mock-server\")), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"Set it up\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"npm install --save-dev @micham/sftp-mock-server\\n\\nyarn add -D @micham/sftp-mock-server\\n\")), \"\\n\", React.createElement(_components.h3, null, \"See it in action\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-typescript\"\n  }, \"describe(\\\"MySFTPClient\\\", () => {\\n  let mockServer: Server;\\n  beforeEach(async () => {\\n    mockServer = await createSftpMockServer({\\n      port: \\\"9999\\\",\\n      hostname: \\\"127.0.0.1\\\",\\n      debug: (msg: string) => logger.debug(msg),\\n    });\\n  });\\n\\n  afterEach(async () => {\\n    await closeServer(mockServer);\\n  });\\n\\n  it(\\\"should be able to write file to the SFTP server\\\", () => {\\n    // GIVEN\\n    const client = new MySFTPClient();\\n\\n    // WHEN\\n    const result = client.doMyThingUsingSftp();\\n\\n    // THEN check result\\n  });\\n});\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/michaelm/Code/homepage/content/blog/sftp-mock-server/sftp-mock-server.mdx\";\nimport * as React from \"react\";\nimport {SEO} from \"../components/SEO\";\nimport Layout from \"../layouts/Layout\";\nimport Img from \"gatsby-image\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Bio from \"../components/Bio\";\nimport Code from \"../components/Code\";\nimport {useResponsive} from \"../hooks/useResponsive\";\nvar components = {\n  pre: function pre(_ref) {\n    var props = _ref.children.props;\n    return React.createElement(Code, Object.assign({\n      codeString: props.children.trim(),\n      language: props.className && props.className.replace(\"language-\", \"\")\n    }, props));\n  }\n};\nvar BlogTemplate = function BlogTemplate(_ref2) {\n  var post = _ref2.data.mdx, children = _ref2.children;\n  var _useResponsive = useResponsive(), media = _useResponsive.media;\n  var mainStyle = Object.assign({}, media({\n    desktop: {\n      maxWidth: \"70%\"\n    },\n    mobile: {\n      maxWidth: \"100%\"\n    }\n  }));\n  return React.createElement(Layout, {\n    title: post.frontmatter.type,\n    mainStyle: mainStyle\n  }, React.createElement(\"article\", {\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(\"p\", null, post.frontmatter.date), post.frontmatter.image.childImageSharp ? React.createElement(Img, {\n    fixed: post.frontmatter.image.childImageSharp.fixed,\n    alt: \"Thumbnail\"\n  }) : React.createElement(\"img\", {\n    src: post.frontmatter.image.publicURL,\n    alt: \"Thumbnail\",\n    style: {\n      maxWidth: \"400px\"\n    }\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children), React.createElement(\"footer\", null, React.createElement(Bio, null))));\n};\nBlogTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport var Head = function Head(_ref3) {\n  var post = _ref3.data.mdx;\n  return React.createElement(SEO, {\n    title: post.frontmatter.title\n  });\n};\nvar pageQuery = \"3585570034\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","a","h3","pre","code","ul","li","_provideComponents","components","React","href","className","MDXLayout","wrapper","_ref","children","Code","codeString","trim","language","replace","BlogTemplate","_ref2","post","data","mdx","media","useResponsive","mainStyle","desktop","maxWidth","mobile","Layout","title","frontmatter","type","itemScope","itemType","itemProp","date","image","childImageSharp","Img","fixed","alt","src","publicURL","style","MDXProvider","Bio","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref3","SEO"],"sourceRoot":""}